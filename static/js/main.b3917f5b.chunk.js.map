{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","constants.js","components/BudgetForm.js","AC/index.js","components/ExpenseForm.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","reducers/budget.js","reducers/index.js","store/index.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","defaultProps","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","types","SAVE_BUDGET","ADD_EXPENSE","REMOVE_EXPENSE","TOTAL_EXPENSES","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","saveBudget","this","Component","connect","budgetState","payload","ExpenseForm","amount","addExpense","id","shortid","generate","Number","Table","table","removeExpense","data","map","key","Container","div","isPositive","p","Amount","Value","section","total","balance","length","initState","combineReducers","reduce","acc","expense","filter","find","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3917f5b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nForm.defaultProps = {\n  onSubmit: () => null,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  customStyles: PropTypes.node.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({ type, value, onChange, name }) => (\n  <StyledInput type={type} value={value} onChange={onChange} name={name} />\n);\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: ' text',\n  value: '',\n  onChange: () => null,\n  name: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type, label, onClick }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  label: '',\n  onClick: () => null,\n};\n\nexport default Button;\n","const types = {\n  SAVE_BUDGET: 'SAVE_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n  TOTAL_EXPENSES: 'TOTAL_EXPENSES',\n};\n\nexport default types;\n","/* eslint-disable react/state-in-constructor */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { saveBudget } from '../AC';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  state = {\n    budget: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { saveBudget } = this.props;\n    const { budget } = this.state;\n    saveBudget(budget);\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={this.state.budget}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  saveBudget: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ budgetState }) => ({\n    budgetState,\n  }),\n  { saveBudget },\n)(BudgetForm);\n","import shortid from 'shortid';\nimport types from '../constants';\n\nexport const saveBudget = value => ({\n  type: types.SAVE_BUDGET,\n  payload: value,\n});\n\nexport const addExpense = ({ name, amount }) => ({\n  type: types.ADD_EXPENSE,\n  payload: {\n    id: shortid.generate(),\n    name,\n    amount: Number(amount),\n  },\n});\n\nexport const removeExpense = id => ({\n  type: types.REMOVE_EXPENSE,\n  payload: id,\n});\n","/* eslint-disable react/state-in-constructor */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { addExpense } from '../AC';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { addExpense } = this.props;\n\n    addExpense({ ...this.state });\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={this.state.amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  addExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(({ budgetState }) => ({ budgetState }), { addExpense })(\n  ExpenseForm,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from './shared/Button';\nimport { removeExpense } from '../AC';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ budgetState, removeExpense }) => {\n  const { data } = budgetState;\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Expense name</th>\n          <th>Expense amount</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(({ id, name, amount }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{amount}</td>\n            <td>\n              <Button label=\"Delete\" onClick={() => removeExpense(id)} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nExpensesTable.propTypes = {\n  budgetState: PropTypes.shape({\n    data: PropTypes.array,\n    total: PropTypes.number,\n    budget: PropTypes.number,\n    balance: PropTypes.number,\n  }).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(({ budgetState }) => ({ budgetState }), {\n  removeExpense,\n})(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nValue.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool.isRequired,\n};\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Value from './Value';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budgetState }) => {\n  const { budget, total, balance } = budgetState;\n  return (\n    <Container>\n      <Value label=\"Budget\" value={budget} isPositive />\n      <Value label=\"Expenses\" value={total} />\n      <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </Container>\n  );\n};\n\nValues.propTypes = {\n  budgetState: PropTypes.shape({\n    data: PropTypes.array,\n    total: PropTypes.number,\n    budget: PropTypes.number,\n    balance: PropTypes.number,\n  }).isRequired,\n};\n\nexport default connect(({ budgetState }) => ({ budgetState }))(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport Values from './Values';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = props => {\n  const { budgetState } = props;\n  const { data } = budgetState;\n\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      {data.length > 0 && <ExpensesTable />}\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  budgetState: PropTypes.shape({\n    data: PropTypes.array,\n    total: PropTypes.number,\n    budget: PropTypes.number,\n    balance: PropTypes.number,\n  }).isRequired,\n};\n\nexport default connect(({ budgetState }) => ({\n  budgetState,\n}))(App);\n","import types from '../constants';\n\nconst initState = {\n  data: [],\n  total: 0,\n  budget: 0,\n  balance: 0,\n};\n\nexport default (state = initState, { type, payload }) => {\n  const { data, total, budget } = state;\n\n  switch (type) {\n    case types.SAVE_BUDGET:\n      return {\n        ...state,\n        budget: payload,\n        balance:\n          payload - data.reduce((acc, expense) => acc + expense.amount, 0),\n      };\n\n    case types.ADD_EXPENSE:\n      return {\n        ...state,\n        data: [...data, payload],\n        total: total + payload.amount,\n        balance: budget - (total + payload.amount),\n      };\n\n    case types.REMOVE_EXPENSE:\n      return {\n        ...state,\n        data: data.filter(expense => expense.id !== payload),\n        total: total - data.find(expense => expense.id === payload).amount,\n        balance:\n          budget -\n          (total - data.find(expense => expense.id === payload).amount),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport budgetReducer from './budget';\n\nexport default combineReducers({\n  budgetState: budgetReducer,\n});\n","import { createStore } from 'redux';\nimport reducers from '../reducers';\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}